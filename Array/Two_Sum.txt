//O(n**2))
public class Solution {
    public int[] TwoSum(int[] nums, int target) {
        //int Lsum=0, Rsum=0;
        for(int i=0;i<nums.Length-1;i++){
            for(int j=i+1;j<nums.Length;j++){
                if(target==nums[i]+nums[j]){
                    return neew int[] {i, j};
                }
            }
        }
        return new int[]{};
    }
}

//O(n)
public class Solution {
    public int[] TwoSum(int[] nums, int target) {
        Dictionary<int, int> d=new Dictionary<int, int>(nums.Length);
        for(int i=0;i<nums.Length;i++){
            int x=target-nums[i];
            if(d.ContainsKey(x)){
                return new int[] {d[x], i};
            }
            d[nums[i]]=i;
        }
        return new int[] {};
    }
}